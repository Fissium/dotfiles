#!/usr/bin/env bash

FILE_PATH="${1}"
FILE_EXTENSION="${FILE_PATH##*.}"
FILE_EXTENSION_LOWER="$(printf "%s" "${FILE_EXTENSION}" | tr '[:upper:]' '[:lower:]')"

PV_WIDTH="${2}"
PV_HEIGHT="${3}"
HORIZONTAL_POS="${4}"
VERTICAL_POS="${5}"

bat() {
  command bat \
    --color=always --paging=never \
    --style=plain \
    --wrap=character \
    --line-range :"${PV_HEIGHT}" \
    --terminal-width="${PV_WIDTH}" "$@"
}

image_previewer() {
  local place="${PV_WIDTH}x${PV_HEIGHT}@${HORIZONTAL_POS}x${VERTICAL_POS}"
  kitty icat --clear --transfer-mode memory --stdin no --align left --place "$place" "$1" </dev/null >/dev/tty
}

pdf_previewer() {
  local tempfile
  tempfile="$(mktemp --suffix=.jpg)"
  if pdftoppm -f 1 -l 1 -scale-to-x 1920 -scale-to-y -1 -singlefile -jpeg -- "${FILE_PATH}" "${tempfile%.*}" >/dev/null 2>&1; then
    image_previewer "${tempfile%.*}.jpg"
  fi
}

handle_extension() {
  case "${FILE_EXTENSION_LOWER}" in
  # Markdown
  md)
    CLICOLOR_FORCE=1 glow -s dark -w "${PV_WIDTH}" -- "${FILE_PATH}" && exit 1
    ;;
  # Archive
  bz2 | gz | lz | tar | xz | zip)
    atool --list -- "${FILE_PATH}" && exit 1
    ;;
  # PDF
  pdf)
    pdf_previewer && exit 1
    ;;
  # JSON
  json)
    jq --color-output . "${FILE_PATH}" && exit1
    ;;
  # Notebooks
  ipynb)
    jq -j '
  .cells
  | map( select(.cell_type == "code") | .source + ["\n\n"] )
  | .[][]
  ' \
      -- "${FILE_PATH}" | bat --language python && exit 1
    ;;
  esac
}

handle_mime() {
  local mimetype="${1}"
  case "${mimetype}" in
  # Image
  image/*)
    image_previewer "${FILE_PATH}"
    exit 1
    ;;
  # Text
  text/* | */xml | application/javascript)
    (bat --style=changes -- "${FILE_PATH}" ||
      highlight --out-format truecolor --style darkplus --force \
        --line-numbers --line-range=1-"${PV_HEIGHT}" -- "${FILE_PATH}" ||
      cat -- "${FILE_PATH}") && exit 1
    ;;
  esac
}

handle_fallback() {
  # Use file command as the fallback. It outputs the file properties, separated by comma, in a
  # single lone line. In order to fit the width of the preview window, replace each comma with a
  # line break, but leave the commas inside square brackets unchanged.
  file --dereference --brief -- "${FILE_PATH}" | gsed -r ':a; s/(\[[^][]*),([^][]*\])/\1TTEEMMPP\2/g; ta; s/, /\n/g; s/TTEEMMPP/,/g' && exit 1
  exit 1
}

MIMETYPE="$(file --dereference --brief --mime-type -- "${FILE_PATH}")"
handle_extension
handle_mime "${MIMETYPE}"
handle_fallback
